// This is an autogenerated file from running `firebase genkit:flow`
'use server';

/**
 * @fileOverview Provides personalized menu item recommendations to users based on their order history.
 *
 * - personalizedRecommendations - A function that takes a user ID and returns a list of recommended menu items.
 * - PersonalizedRecommendationsInput - The input type for the personalizedRecommendations function.
 * - PersonalizedRecommendationsOutput - The return type for the personalizedRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PersonalizedRecommendationsInputSchema = z.object({
  userId: z.string().describe('The ID of the user to generate recommendations for.'),
});
export type PersonalizedRecommendationsInput = z.infer<typeof PersonalizedRecommendationsInputSchema>;

const MenuItemSchema = z.object({
  item_id: z.string(),
  item_name: z.string(),
  description: z.string(),
  is_veg: z.boolean(),
  category_id: z.string(),
});

const PersonalizedRecommendationsOutputSchema = z.array(MenuItemSchema);
export type PersonalizedRecommendationsOutput = z.infer<typeof PersonalizedRecommendationsOutputSchema>;

export async function personalizedRecommendations(input: PersonalizedRecommendationsInput): Promise<PersonalizedRecommendationsOutput> {
  return personalizedRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'personalizedRecommendationsPrompt',
  input: {schema: PersonalizedRecommendationsInputSchema},
  output: {schema: PersonalizedRecommendationsOutputSchema},
  prompt: `You are a personal restaurant menu recommender.
Given the user's order history, recommend a list of menu items that the user might enjoy.

User ID: {{{userId}}}

Return a JSON array of menu items, each with item_id, item_name, description, is_veg, and category_id.

Consider items the user has ordered before, items in similar categories, and popular items.
`,
});

const personalizedRecommendationsFlow = ai.defineFlow(
  {
    name: 'personalizedRecommendationsFlow',
    inputSchema: PersonalizedRecommendationsInputSchema,
    outputSchema: PersonalizedRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
